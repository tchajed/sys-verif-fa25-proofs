(* autogenerated by goose proofgen; do not modify *)
Require Export New.proof.proof_prelude.
Require Export New.generatedproof.github_com.goose_lang.std.
Require Export New.golang.theory.

Require Export New.code.sys_verif_code.functional.

Set Default Proof Using "Type".

Module functional.

Section names.

Context `{hG: heapGS Σ, !ffi_semantics _ _}.
Context `{!globalsGS Σ}.
Context {go_ctx : GoContext}.
#[local] Transparent is_pkg_defined is_pkg_defined_pure.

Global Instance is_pkg_defined_pure_functional : IsPkgDefinedPure functional :=
  {|
    is_pkg_defined_pure_def go_ctx :=
      is_pkg_defined_pure_single functional ∧
      is_pkg_defined_pure code.github_com.goose_lang.std.std;
  |}.

#[local] Transparent is_pkg_defined_single is_pkg_defined_pure_single.
Global Program Instance is_pkg_defined_functional : IsPkgDefined functional :=
  {|
    is_pkg_defined_def go_ctx :=
      (is_pkg_defined_single functional ∗
       is_pkg_defined code.github_com.goose_lang.std.std)%I
  |}.
Final Obligation. iIntros. iFrame "#%". Qed.
#[local] Opaque is_pkg_defined_single is_pkg_defined_pure_single.

Global Instance wp_func_call_Add :
  WpFuncCall functional.Add _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Max :
  WpFuncCall functional.Max _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Midpoint :
  WpFuncCall functional.Midpoint _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Midpoint2 :
  WpFuncCall functional.Midpoint2 _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Arith :
  WpFuncCall functional.Arith _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_SumNrec :
  WpFuncCall functional.SumNrec _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_SumN :
  WpFuncCall functional.SumN _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_SumN2 :
  WpFuncCall functional.SumN2 _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Fibonacci :
  WpFuncCall functional.Fibonacci _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_Factorial :
  WpFuncCall functional.Factorial _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

Global Instance wp_func_call_FastExp :
  WpFuncCall functional.FastExp _ (is_pkg_defined functional) :=
  ltac:(solve_wp_func_call).

End names.
End functional.
